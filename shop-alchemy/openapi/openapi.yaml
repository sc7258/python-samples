openapi: 3.0.3
info:
  title: Shop Alchemy API
  description: |-
    회원가입, 상품 주문을 위한 쇼핑몰 백엔드 API 명세서.
    SQLAlchemy와 클린 아키텍처를 기반으로 설계되었습니다.
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000
    description: Development server
tags:
  - name: Member
    description: 회원 관련 API
  - name: Item
    description: 상품(도서) 관련 API
  - name: Order
    description: 주문 관련 API
  - name: Category
    description: 카테고리 관련 API
paths:
  /members:
    post:
      tags:
        - Member
      summary: 신규 회원 등록
      description: 새로운 회원을 시스템에 등록합니다.
      operationId: add_member
      requestBody:
        description: 등록할 회원 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberCreate'
      responses:
        '201':
          description: 성공적으로 회원이 등록됨
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '400':
          description: 잘못된 요청 (예: 이메일 중복)
  /items/books:
    post:
      tags:
        - Item
      summary: 신규 도서 등록
      description: 새로운 도서 상품을 시스템에 등록합니다.
      operationId: add_book
      requestBody:
        description: 등록할 도서 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCreate'
      responses:
        '201':
          description: 성공적으로 도서가 등록됨
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /orders:
    post:
      tags:
        - Order
      summary: 신규 주문 생성
      description: 회원이 상품을 주문하고 재고를 관리합니다.
      operationId: place_order
      requestBody:
        description: 생성할 주문 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
      responses:
        '201':
          description: 성공적으로 주문이 생성됨
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: 잘못된 요청 (예: 재고 부족)
components:
  schemas:
    # Member Schemas
    MemberCreate:
      type: object
      properties:
        name:
          type: string
          description: 회원 이름
          example: "홍길동"
        email:
          type: string
          format: email
          description: 회원 이메일
          example: "gildong@example.com"
      required:
        - name
        - email
    Member:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: 회원 ID
        name:
          type: string
        email:
          type: string
          format: email
        created_at:
          type: string
          format: date-time
    # Item/Book Schemas
    BookCreate:
      type: object
      properties:
        name:
          type: string
          example: "클린 아키텍처"
        price:
          type: integer
          example: 25000
        stock_quantity:
          type: integer
          example: 100
        author:
          type: string
          example: "로버트 C. 마틴"
        isbn:
          type: string
          example: "9788966262472"
        category_ids:
          type: array
          items:
            type: integer
          description: 도서가 속한 카테고리 ID 목록
          example: [1, 2]
      required:
        - name
        - price
        - stock_quantity
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: integer
        stock_quantity:
          type: integer
        author:
          type: string
        isbn:
          type: string
    # Order Schemas
    OrderCreate:
      type: object
      properties:
        member_id:
          type: integer
          description: 주문자 ID
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemCreate'
      required:
        - member_id
        - items
    OrderItemCreate:
      type: object
      properties:
        item_id:
          type: integer
          description: 주문할 상품 ID
        count:
          type: integer
          description: 주문 수량
      required:
        - item_id
        - count
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        member_id:
          type: integer
        order_date:
          type: string
          format: date-time
        status:
          type: string
          enum: [ORDERED, CANCELED]
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
    OrderItem:
      type: object
      properties:
        item_id:
          type: integer
        order_price:
          type: integer
        count:
          type: integer
